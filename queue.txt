Assignment name  : queue
Expected files   : queue.c
Allowed functions: malloc free
--------------------------------------------------------------------------------
Implement a queue data structure in C, using the following structures in your 
code:
    struct s_node {
        void *content;
        struct s_node *next;
    };
    struct s_queue {
        struct s_node *first;
        struct s_node *last;
    };
    
A queue uses FIFO (first-in fist-out) ordering :
items are removed from the data structure in the same order that they are added.
Implement 5 functions for the following queue operations :
    - init() : Initialize the queue.
      The first and last pointers are set to NULL.
    - enqueue(queue, item) : Add an item to the end of the queue.
    - dequeue(queue) : Remove the first item from the queue and return it.
      If the queue is empty, the function returns NULL.
    - peek(queue) : Return the first item of the queue.
      If the queue is empty, the function returns NULL.
    - isEmpty(queue) : Return 1 if the queue is empty, 0 otherwise.

These functions must be declared as follows:
    struct s_queue *init(void);
    void enqueue(struct s_queue *queue, void *content);
    void *dequeue(struct s_queue *queue);
    void *peek(struct s_queue *queue);
    int isEmpty(struct s_queue *queue);

// https://www.youtube.com/watch?v=86g8jAQug04&list=PLSpTzxrSpOsR0aq-pPdaB45wyY4zkEC7J&index=9
// https://www.codesdope.com/blog/article/making-a-queue-using-linked-list-in-c/
// http://btechsmartclass.com/data_structures/queue-using-linked-list.html
// http://programmingearth.com/post.php?pageid=79&title=C%20program%20to%20implement%20Queue%20using%20linked%20list.
// https://www.techiedelight.com/queue-implementation-using-linked-list/
// https://www.sanfoundry.com/c-program-queue-using-linked-list/

